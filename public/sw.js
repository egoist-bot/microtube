var __wpo = {"assets":{"main":["./vendor.js","./app.js","./1.1cb0aaf4a87c08841e95.hot-update.js","./1cb0aaf4a87c08841e95.hot-update.json","./app.css","//cdnjs.cloudflare.com/ajax/libs/moment.js/2.17.1/moment.min.js","//cdnjs.cloudflare.com/ajax/libs/redux/3.6.0/redux.min.js","//cdnjs.cloudflare.com/ajax/libs/react/15.4.2/react.min.js","//cdnjs.cloudflare.com/ajax/libs/react/15.4.2/react-dom.min.js","//cdnjs.cloudflare.com/ajax/libs/react-redux/5.0.2/react-redux.min.js"],"additional":[],"optional":[]},"externals":["//cdnjs.cloudflare.com/ajax/libs/moment.js/2.17.1/moment.min.js","//cdnjs.cloudflare.com/ajax/libs/redux/3.6.0/redux.min.js","//cdnjs.cloudflare.com/ajax/libs/react/15.4.2/react.min.js","//cdnjs.cloudflare.com/ajax/libs/react/15.4.2/react-dom.min.js","//cdnjs.cloudflare.com/ajax/libs/react-redux/5.0.2/react-redux.min.js"],"hashesMap":{"87fd608ed0ced3c539838e41145ea055abcaf2d5":"./vendor.js","97ae76d7315c8c2629b5c72e2b7bcddbde5c7cc5":"./app.js","8e683a11e079bd2cf4b7465059bcf5c758f2d370":"./1.1cb0aaf4a87c08841e95.hot-update.js","a1ba1aee11765dcc2f0a7c7836812f8c116e69d8":"./1cb0aaf4a87c08841e95.hot-update.json","bd73d75f341cee16c4ed3e9fe761c861b322899a":"./app.css"},"strategy":"changed","responseStrategy":"cache-first","version":"2017-8-21 19:29:19","name":"webpack-offline","pluginVersion":"4.8.3","relativePaths":false};

!function(n){function e(n){function e(n,e){"ready"===G&&c("prepare"),h++,s.e(n,function(){function g(){h--,"prepare"===G&&(X[n]||l(n),0===h&&0===F&&a())}try{e.call(null,t)}finally{g()}})}var g=p[n];if(!g)return s;var t=function(e){return g.hot.active?p[e]?(p[e].parents.indexOf(n)<0&&p[e].parents.push(n),g.children.indexOf(e)<0&&g.children.push(e)):A=[n]:(console.warn("[HMR] unexpected require("+e+") from disposed module "+n),A=[]),s(e)};for(var I in s)Object.prototype.hasOwnProperty.call(s,I)&&(C?Object.defineProperty(t,I,function(n){return{configurable:!0,enumerable:!0,get:function(){return s[n]},set:function(e){s[n]=e}}}(I)):t[I]=s[I]);return C?Object.defineProperty(t,"e",{enumerable:!0,value:e}):t.e=e,t}function g(n){var e={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],active:!0,accept:function(n,g){if("undefined"==typeof n)e._selfAccepted=!0;else if("function"==typeof n)e._selfAccepted=n;else if("object"==typeof n)for(var c=0;c<n.length;c++)e._acceptedDependencies[n[c]]=g;else e._acceptedDependencies[n]=g},decline:function(n){if("undefined"==typeof n)e._selfDeclined=!0;else if("number"==typeof n)e._declinedDependencies[n]=!0;else for(var g=0;g<n.length;g++)e._declinedDependencies[n[g]]=!0},dispose:function(n){e._disposeHandlers.push(n)},addDisposeHandler:function(n){e._disposeHandlers.push(n)},removeDisposeHandler:function(n){var g=e._disposeHandlers.indexOf(n);g>=0&&e._disposeHandlers.splice(g,1)},check:I,apply:B,status:function(n){return n?void o.push(n):G},addStatusHandler:function(n){o.push(n)},removeStatusHandler:function(n){var e=o.indexOf(n);e>=0&&o.splice(e,1)},data:d[n]};return e}function c(n){G=n;for(var e=0;e<o.length;e++)o[e].call(null,n)}function t(n){var e=+n+""===n;return e?+n:n}function I(n,e){if("idle"!==G)throw new Error("check() is only allowed in idle status");"function"==typeof n?(Q=!1,e=n):(Q=n,e=e||function(n){if(n)throw n}),c("check"),hotDownloadManifest(function(n,g){if(n)return e(n);if(!g)return c("idle"),void e(null,null);Z={},m={},X={};for(var t=0;t<g.c.length;t++)m[g.c[t]]=!0;u=g.h,c("prepare"),i=e,r={};var I=0;l(I),"prepare"===G&&0===h&&0===F&&a()})}function l(n){m[n]?(Z[n]=!0,F++,hotDownloadUpdateChunk(n)):X[n]=!0}function a(){c("ready");var n=i;if(i=null,n)if(Q)B(Q,n);else{var e=[];for(var g in r)Object.prototype.hasOwnProperty.call(r,g)&&e.push(t(g));n(null,e)}}function B(e,g){function I(n){for(var e=[n],g={},c=e.slice();c.length>0;){var t=c.pop(),n=p[t];if(n&&!n.hot._selfAccepted){if(n.hot._selfDeclined)return new Error("Aborted because of self decline: "+t);if(0===t)return;for(var I=0;I<n.parents.length;I++){var a=n.parents[I],B=p[a];if(B.hot._declinedDependencies[t])return new Error("Aborted because of declined dependency: "+t+" in "+a);e.indexOf(a)>=0||(B.hot._acceptedDependencies[t]?(g[a]||(g[a]=[]),l(g[a],[t])):(delete g[a],e.push(a),c.push(a)))}}}return[e,g]}function l(n,e){for(var g=0;g<e.length;g++){var c=e[g];n.indexOf(c)<0&&n.push(c)}}if("ready"!==G)throw new Error("apply() is only allowed in ready status");"function"==typeof e?(g=e,e={}):e&&"object"==typeof e?g=g||function(n){if(n)throw n}:(e={},g=g||function(n){if(n)throw n});var a={},B=[],C={};for(var i in r)if(Object.prototype.hasOwnProperty.call(r,i)){var Q=t(i),o=I(Q);if(!o){if(e.ignoreUnaccepted)continue;return c("abort"),g(new Error("Aborted because "+Q+" is not accepted"))}if(o instanceof Error)return c("abort"),g(o);C[Q]=r[Q],l(B,o[0]);for(var Q in o[1])Object.prototype.hasOwnProperty.call(o[1],Q)&&(a[Q]||(a[Q]=[]),l(a[Q],o[1][Q]))}for(var F=[],h=0;h<B.length;h++){var Q=B[h];p[Q]&&p[Q].hot._selfAccepted&&F.push({module:Q,errorHandler:p[Q].hot._selfAccepted})}c("dispose");for(var X=B.slice();X.length>0;){var Q=X.pop(),Z=p[Q];if(Z){for(var m={},U=Z.hot._disposeHandlers,N=0;N<U.length;N++){var V=U[N];V(m)}d[Q]=m,Z.hot.active=!1,delete p[Q];for(var N=0;N<Z.children.length;N++){var y=p[Z.children[N]];if(y){var W=y.parents.indexOf(Q);W>=0&&y.parents.splice(W,1)}}}}for(var Q in a)if(Object.prototype.hasOwnProperty.call(a,Q))for(var Z=p[Q],Y=a[Q],N=0;N<Y.length;N++){var v=Y[N],W=Z.children.indexOf(v);W>=0&&Z.children.splice(W,1)}c("apply"),b=u;for(var Q in C)Object.prototype.hasOwnProperty.call(C,Q)&&(n[Q]=C[Q]);var f=null;for(var Q in a)if(Object.prototype.hasOwnProperty.call(a,Q)){for(var Z=p[Q],Y=a[Q],R=[],h=0;h<Y.length;h++){var v=Y[h],V=Z.hot._acceptedDependencies[v];R.indexOf(V)>=0||R.push(V)}for(var h=0;h<R.length;h++){var V=R[h];try{V(a)}catch(n){f||(f=n)}}}for(var h=0;h<F.length;h++){var x=F[h],Q=x.module;A=[Q];try{s(Q)}catch(n){if("function"==typeof x.errorHandler)try{x.errorHandler(n)}catch(n){f||(f=n)}else f||(f=n)}}return f?(c("fail"),g(f)):(c("idle"),void g(null,B))}function s(c){if(p[c])return p[c].exports;var t=p[c]={exports:{},id:c,loaded:!1,hot:g(c),parents:A,children:[]};return n[c].call(t.exports,t,t.exports,e(c)),t.loaded=!0,t.exports}var C=!1;try{Object.defineProperty({},"x",{get:function(){}}),C=!0}catch(n){}var i,r,u,Q=!0,b="3c799a4a067cb4f51af6",d={},A=[],o=[],G="idle",F=0,h=0,X={},Z={},m={},p={};return s.m=n,s.c=p,s.p="./",s.h=function(){return b},e(0)(0)}([function(module,exports,__webpack_require__){eval("\"use strict\";\n\n(function () {\n  var waitUntil = ExtendableEvent.prototype.waitUntil;\n  var respondWith = FetchEvent.prototype.respondWith;\n  var promisesMap = new WeakMap();\n\n  ExtendableEvent.prototype.waitUntil = function (promise) {\n    var extendableEvent = this;\n    var promises = promisesMap.get(extendableEvent);\n\n    if (promises) {\n      promises.push(Promise.resolve(promise));\n      return;\n    }\n\n    promises = [Promise.resolve(promise)];\n    promisesMap.set(extendableEvent, promises);\n\n    // call original method\n    return waitUntil.call(extendableEvent, Promise.resolve().then(function processPromises() {\n      var len = promises.length;\n\n      // wait for all to settle\n      return Promise.all(promises.map(function (p) {\n        return p[\"catch\"](function () {});\n      })).then(function () {\n        // have new items been added? If so, wait again\n        if (promises.length != len) return processPromises();\n        // we're done!\n        promisesMap[\"delete\"](extendableEvent);\n        // reject if one of the promises rejected\n        return Promise.all(promises);\n      });\n    }));\n  };\n\n  FetchEvent.prototype.respondWith = function (promise) {\n    this.waitUntil(promise);\n    return respondWith.call(this, promise);\n  };\n})();;\n        'use strict';\n\nif (false) {\n  var DEBUG = false;\n}\n\nfunction WebpackServiceWorker(params, helpers) {\n  var loaders = helpers.loaders;\n  var cacheMaps = helpers.cacheMaps;\n\n  var strategy = params.strategy;\n  var responseStrategy = params.responseStrategy;\n\n  var assets = params.assets;\n  var loadersMap = params.loaders || {};\n\n  var hashesMap = params.hashesMap;\n  var externals = params.externals;\n\n  // Not used yet\n  // const alwaysRevalidate = params.alwaysRevalidate;\n  // const ignoreSearch = params.ignoreSearch;\n  // const preferOnline = params.preferOnline;\n\n  var CACHE_PREFIX = params.name;\n  var CACHE_TAG = params.version;\n  var CACHE_NAME = CACHE_PREFIX + ':' + CACHE_TAG;\n\n  var STORED_DATA_KEY = '__offline_webpack__data';\n\n  mapAssets();\n\n  var allAssets = [].concat(assets.main, assets.additional, assets.optional);\n  var navigateFallbackURL = params.navigateFallbackURL;\n  var navigateFallbackForRedirects = params.navigateFallbackForRedirects;\n\n  self.addEventListener('install', function (event) {\n    console.log('[SW]:', 'Install event');\n\n    var installing = undefined;\n\n    if (strategy === 'changed') {\n      installing = cacheChanged('main');\n    } else {\n      installing = cacheAssets('main');\n    }\n\n    event.waitUntil(installing);\n  });\n\n  self.addEventListener('activate', function (event) {\n    console.log('[SW]:', 'Activate event');\n\n    var activation = cacheAdditional();\n\n    // Delete all assets which name starts with CACHE_PREFIX and\n    // is not current cache (CACHE_NAME)\n    activation = activation.then(storeCacheData);\n    activation = activation.then(deleteObsolete);\n    activation = activation.then(function () {\n      if (self.clients && self.clients.claim) {\n        return self.clients.claim();\n      }\n    });\n\n    event.waitUntil(activation);\n  });\n\n  function cacheAdditional() {\n    if (!assets.additional.length) {\n      return Promise.resolve();\n    }\n\n    if (false) {\n      console.log('[SW]:', 'Caching additional');\n    }\n\n    var operation = undefined;\n\n    if (strategy === 'changed') {\n      operation = cacheChanged('additional');\n    } else {\n      operation = cacheAssets('additional');\n    }\n\n    // Ignore fail of `additional` cache section\n    return operation['catch'](function (e) {\n      console.error('[SW]:', 'Cache section `additional` failed to load');\n    });\n  }\n\n  function cacheAssets(section) {\n    var batch = assets[section];\n\n    return caches.open(CACHE_NAME).then(function (cache) {\n      return addAllNormalized(cache, batch, {\n        bust: params.version,\n        request: params.prefetchRequest\n      });\n    }).then(function () {\n      logGroup('Cached assets: ' + section, batch);\n    })['catch'](function (e) {\n      console.error(e);\n      throw e;\n    });\n  }\n\n  function cacheChanged(section) {\n    return getLastCache().then(function (args) {\n      if (!args) {\n        return cacheAssets(section);\n      }\n\n      var lastCache = args[0];\n      var lastKeys = args[1];\n      var lastData = args[2];\n\n      var lastMap = lastData.hashmap;\n      var lastVersion = lastData.version;\n\n      if (!lastData.hashmap || lastVersion === params.version) {\n        return cacheAssets(section);\n      }\n\n      var lastHashedAssets = Object.keys(lastMap).map(function (hash) {\n        return lastMap[hash];\n      });\n\n      var lastUrls = lastKeys.map(function (req) {\n        var url = new URL(req.url);\n        url.search = '';\n        url.hash = '';\n\n        return url.toString();\n      });\n\n      var sectionAssets = assets[section];\n      var moved = [];\n      var changed = sectionAssets.filter(function (url) {\n        if (lastUrls.indexOf(url) === -1 || lastHashedAssets.indexOf(url) === -1) {\n          return true;\n        }\n\n        return false;\n      });\n\n      Object.keys(hashesMap).forEach(function (hash) {\n        var asset = hashesMap[hash];\n\n        // Return if not in sectionAssets or in changed or moved array\n        if (sectionAssets.indexOf(asset) === -1 || changed.indexOf(asset) !== -1 || moved.indexOf(asset) !== -1) return;\n\n        var lastAsset = lastMap[hash];\n\n        if (lastAsset && lastUrls.indexOf(lastAsset) !== -1) {\n          moved.push([lastAsset, asset]);\n        } else {\n          changed.push(asset);\n        }\n      });\n\n      logGroup('Changed assets: ' + section, changed);\n      logGroup('Moved assets: ' + section, moved);\n\n      var movedResponses = Promise.all(moved.map(function (pair) {\n        return lastCache.match(pair[0]).then(function (response) {\n          return [pair[1], response];\n        });\n      }));\n\n      return caches.open(CACHE_NAME).then(function (cache) {\n        var move = movedResponses.then(function (responses) {\n          return Promise.all(responses.map(function (pair) {\n            return cache.put(pair[0], pair[1]);\n          }));\n        });\n\n        return Promise.all([move, addAllNormalized(cache, changed, {\n          bust: params.version,\n          request: params.prefetchRequest\n        })]);\n      });\n    });\n  }\n\n  function deleteObsolete() {\n    return caches.keys().then(function (keys) {\n      var all = keys.map(function (key) {\n        if (key.indexOf(CACHE_PREFIX) !== 0 || key.indexOf(CACHE_NAME) === 0) return;\n\n        console.log('[SW]:', 'Delete cache:', key);\n        return caches['delete'](key);\n      });\n\n      return Promise.all(all);\n    });\n  }\n\n  function getLastCache() {\n    return caches.keys().then(function (keys) {\n      var index = keys.length;\n      var key = undefined;\n\n      while (index--) {\n        key = keys[index];\n\n        if (key.indexOf(CACHE_PREFIX) === 0) {\n          break;\n        }\n      }\n\n      if (!key) return;\n\n      var cache = undefined;\n\n      return caches.open(key).then(function (_cache) {\n        cache = _cache;\n        return _cache.match(new URL(STORED_DATA_KEY, location).toString());\n      }).then(function (response) {\n        if (!response) return;\n\n        return Promise.all([cache, cache.keys(), response.json()]);\n      });\n    });\n  }\n\n  function storeCacheData() {\n    return caches.open(CACHE_NAME).then(function (cache) {\n      var data = new Response(JSON.stringify({\n        version: params.version,\n        hashmap: hashesMap\n      }));\n\n      return cache.put(new URL(STORED_DATA_KEY, location).toString(), data);\n    });\n  }\n\n  self.addEventListener('fetch', function (event) {\n    var url = new URL(event.request.url);\n    url.hash = '';\n\n    var urlString = url.toString();\n\n    // Not external, so search part of the URL should be stripped,\n    // if it's external URL, the search part should be kept\n    if (externals.indexOf(urlString) === -1) {\n      url.search = '';\n      urlString = url.toString();\n    }\n\n    // Handle only GET requests\n    var isGET = event.request.method === 'GET';\n    var assetMatches = allAssets.indexOf(urlString) !== -1;\n    var cacheUrl = urlString;\n\n    if (!assetMatches) {\n      var cacheRewrite = matchCacheMap(event.request);\n\n      if (cacheRewrite) {\n        cacheUrl = cacheRewrite;\n        assetMatches = true;\n      }\n    }\n\n    if (!assetMatches && isGET) {\n      // If isn't a cached asset and is a navigation request,\n      // fallback to navigateFallbackURL if available\n      if (navigateFallbackURL && isNavigateRequest(event.request)) {\n        event.respondWith(handleNavigateFallback(fetch(event.request)));\n\n        return;\n      }\n    }\n\n    if (!assetMatches || !isGET) {\n      // Fix for https://twitter.com/wanderview/status/696819243262873600\n      if (url.origin !== location.origin && navigator.userAgent.indexOf('Firefox/44.') !== -1) {\n        event.respondWith(fetch(event.request));\n      }\n\n      return;\n    }\n\n    // Logic of caching / fetching is here\n    // * urlString -- url to match from the CACHE_NAME\n    // * event.request -- original Request to perform fetch() if necessary\n    var resource = undefined;\n\n    if (responseStrategy === 'network-first') {\n      resource = networkFirstResponse(event, urlString, cacheUrl);\n    }\n    // 'cache-first'\n    // (responseStrategy has been validated before)\n    else {\n        resource = cacheFirstResponse(event, urlString, cacheUrl);\n      }\n\n    if (navigateFallbackURL && isNavigateRequest(event.request)) {\n      resource = handleNavigateFallback(resource);\n    }\n\n    event.respondWith(resource);\n  });\n\n  self.addEventListener('message', function (e) {\n    var data = e.data;\n    if (!data) return;\n\n    switch (data.action) {\n      case 'skipWaiting':\n        {\n          if (self.skipWaiting) self.skipWaiting();\n        }break;\n    }\n  });\n\n  function cacheFirstResponse(event, urlString, cacheUrl) {\n    return cachesMatch(cacheUrl, CACHE_NAME).then(function (response) {\n      if (response) {\n        if (false) {\n          console.log('[SW]:', 'URL [' + cacheUrl + '](' + urlString + ') from cache');\n        }\n\n        return response;\n      }\n\n      // Load and cache known assets\n      var fetching = fetch(event.request).then(function (response) {\n        if (!response.ok) {\n          if (false) {\n            console.log('[SW]:', 'URL [' + urlString + '] wrong response: [' + response.status + '] ' + response.type);\n          }\n\n          return response;\n        }\n\n        if (false) {\n          console.log('[SW]:', 'URL [' + urlString + '] from network');\n        }\n\n        if (cacheUrl === urlString) {\n          (function () {\n            var responseClone = response.clone();\n            var storing = caches.open(CACHE_NAME).then(function (cache) {\n              return cache.put(urlString, responseClone);\n            }).then(function () {\n              console.log('[SW]:', 'Cache asset: ' + urlString);\n            });\n\n            event.waitUntil(storing);\n          })();\n        }\n\n        return response;\n      });\n\n      return fetching;\n    });\n  }\n\n  function networkFirstResponse(event, urlString, cacheUrl) {\n    return fetch(event.request).then(function (response) {\n      if (response.ok) {\n        if (false) {\n          console.log('[SW]:', 'URL [' + urlString + '] from network');\n        }\n\n        return response;\n      }\n\n      // Throw to reach the code in the catch below\n      throw new Error('Response is not ok');\n    })\n    // This needs to be in a catch() and not just in the then() above\n    // cause if your network is down, the fetch() will throw\n    ['catch'](function () {\n      if (false) {\n        console.log('[SW]:', 'URL [' + urlString + '] from cache if possible');\n      }\n\n      return cachesMatch(cacheUrl, CACHE_NAME);\n    });\n  }\n\n  function handleNavigateFallback(fetching) {\n    return fetching['catch'](function () {}).then(function (response) {\n      var isOk = response && response.ok;\n      var isRedirect = response && response.type === 'opaqueredirect';\n\n      if (isOk || isRedirect && !navigateFallbackForRedirects) {\n        return response;\n      }\n\n      if (false) {\n        console.log('[SW]:', 'Loading navigation fallback [' + navigateFallbackURL + '] from cache');\n      }\n\n      return cachesMatch(navigateFallbackURL, CACHE_NAME);\n    });\n  }\n\n  function mapAssets() {\n    Object.keys(assets).forEach(function (key) {\n      assets[key] = assets[key].map(function (path) {\n        var url = new URL(path, location);\n\n        url.hash = '';\n\n        if (externals.indexOf(path) === -1) {\n          url.search = '';\n        }\n\n        return url.toString();\n      });\n    });\n\n    Object.keys(loadersMap).forEach(function (key) {\n      loadersMap[key] = loadersMap[key].map(function (path) {\n        var url = new URL(path, location);\n\n        url.hash = '';\n\n        if (externals.indexOf(path) === -1) {\n          url.search = '';\n        }\n\n        return url.toString();\n      });\n    });\n\n    hashesMap = Object.keys(hashesMap).reduce(function (result, hash) {\n      var url = new URL(hashesMap[hash], location);\n      url.search = '';\n      url.hash = '';\n\n      result[hash] = url.toString();\n      return result;\n    }, {});\n\n    externals = externals.map(function (path) {\n      var url = new URL(path, location);\n      url.hash = '';\n\n      return url.toString();\n    });\n  }\n\n  function addAllNormalized(cache, requests, options) {\n    var allowLoaders = options.allowLoaders !== false;\n    var bustValue = options && options.bust;\n    var requestInit = options.request || {\n      credentials: 'omit',\n      mode: 'cors'\n    };\n\n    return Promise.all(requests.map(function (request) {\n      if (bustValue) {\n        request = applyCacheBust(request, bustValue);\n      }\n\n      return fetch(request, requestInit).then(fixRedirectedResponse);\n    })).then(function (responses) {\n      if (responses.some(function (response) {\n        return !response.ok;\n      })) {\n        return Promise.reject(new Error('Wrong response status'));\n      }\n\n      var extracted = [];\n      var addAll = responses.map(function (response, i) {\n        if (allowLoaders) {\n          extracted.push(extractAssetsWithLoaders(requests[i], response));\n        }\n\n        return cache.put(requests[i], response);\n      });\n\n      if (extracted.length) {\n        (function () {\n          var newOptions = copyObject(options);\n          newOptions.allowLoaders = false;\n\n          var waitAll = addAll;\n\n          addAll = Promise.all(extracted).then(function (all) {\n            var extractedRequests = [].concat.apply([], all);\n\n            if (requests.length) {\n              waitAll = waitAll.concat(addAllNormalized(cache, extractedRequests, newOptions));\n            }\n\n            return Promise.all(waitAll);\n          });\n        })();\n      } else {\n        addAll = Promise.all(addAll);\n      }\n\n      return addAll;\n    });\n  }\n\n  function extractAssetsWithLoaders(request, response) {\n    var all = Object.keys(loadersMap).map(function (key) {\n      var loader = loadersMap[key];\n\n      if (loader.indexOf(request) !== -1 && loaders[key]) {\n        return loaders[key](response.clone());\n      }\n    }).filter(function (a) {\n      return !!a;\n    });\n\n    return Promise.all(all).then(function (all) {\n      return [].concat.apply([], all);\n    });\n  }\n\n  function matchCacheMap(request) {\n    var urlString = request.url;\n    var url = new URL(urlString);\n\n    var requestType = undefined;\n\n    if (request.mode === 'navigate') {\n      requestType = 'navigate';\n    } else if (url.origin === location.origin) {\n      requestType = 'same-origin';\n    } else {\n      requestType = 'cross-origin';\n    }\n\n    for (var i = 0; i < cacheMaps.length; i++) {\n      var map = cacheMaps[i];\n\n      if (!map) continue;\n      if (map.requestTypes && map.requestTypes.indexOf(requestType) === -1) {\n        continue;\n      }\n\n      var newString = undefined;\n\n      if (typeof map.match === 'function') {\n        newString = map.match(url, request);\n      } else {\n        newString = urlString.replace(map.match, map.to);\n      }\n\n      if (newString && newString !== urlString) {\n        return newString;\n      }\n    }\n  }\n}\n\nfunction cachesMatch(request, cacheName) {\n  return caches.match(request, {\n    cacheName: cacheName\n  }).then(function (response) {\n    if (isNotRedirectedResponse()) {\n      return response;\n    }\n\n    // Fix already cached redirected responses\n    return fixRedirectedResponse(response).then(function (fixedResponse) {\n      return caches.open(cacheName).then(function (cache) {\n        return cache.put(request, fixedResponse);\n      }).then(function () {\n        return fixedResponse;\n      });\n    });\n  })\n  // Return void if error happened (cache not found)\n  ['catch'](function () {});\n}\n\nfunction applyCacheBust(asset, key) {\n  var hasQuery = asset.indexOf('?') !== -1;\n  return asset + (hasQuery ? '&' : '?') + '__uncache=' + encodeURIComponent(key);\n}\n\nfunction getClientsURLs() {\n  if (!self.clients) {\n    return Promise.resolve([]);\n  }\n\n  return self.clients.matchAll({\n    includeUncontrolled: true\n  }).then(function (clients) {\n    if (!clients.length) return [];\n\n    var result = [];\n\n    clients.forEach(function (client) {\n      var url = new URL(client.url);\n      url.search = '';\n      url.hash = '';\n      var urlString = url.toString();\n\n      if (!result.length || result.indexOf(urlString) === -1) {\n        result.push(urlString);\n      }\n    });\n\n    return result;\n  });\n}\n\nfunction isNavigateRequest(request) {\n  return request.mode === 'navigate' || request.headers.get('Upgrade-Insecure-Requests') || (request.headers.get('Accept') || '').indexOf('text/html') !== -1;\n}\n\nfunction isNotRedirectedResponse(response) {\n  return !response || !response.redirected || !response.ok || response.type === 'opaqueredirect';\n}\n\n// Based on https://github.com/GoogleChrome/sw-precache/pull/241/files#diff-3ee9060dc7a312c6a822cac63a8c630bR85\nfunction fixRedirectedResponse(response) {\n  if (isNotRedirectedResponse(response)) {\n    return Promise.resolve(response);\n  }\n\n  var body = 'body' in response ? Promise.resolve(response.body) : response.blob();\n\n  return body.then(function (data) {\n    return new Response(data, {\n      headers: response.headers,\n      status: response.status\n    });\n  });\n}\n\nfunction copyObject(original) {\n  return Object.keys(original).reduce(function (result, key) {\n    result[key] = original[key];\n    return result;\n  }, {});\n}\n\nfunction logGroup(title, assets) {\n  console.groupCollapsed('[SW]:', title);\n\n  assets.forEach(function (asset) {\n    console.log('Asset:', asset);\n  });\n\n  console.groupEnd();\n}\n        WebpackServiceWorker(__wpo, {\nloaders: {},\ncacheMaps: [],\n});\n        module.exports = __webpack_require__(1)\n      //# sourceMappingURL=data:application/json;charset=utf-8;base64,");
},function(module,exports){eval("//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vb2ZmbGluZS1wbHVnaW4vdHBscy9lbXB0eS1lbnRyeS5qcz9jMWZkIl0sInNvdXJjZXNDb250ZW50IjpbIlxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9vZmZsaW5lLXBsdWdpbi90cGxzL2VtcHR5LWVudHJ5LmpzXG4vLyBtb2R1bGUgaWQgPSAxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=")}]);